{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BANSROY\\\\Documents\\\\Frontend\\\\React\\\\customer-app\\\\src\\\\components\\\\CustomerList.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Customer from \"./Customer\";\nimport Filter from \"./Filter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomerList() {\n  _s();\n  //Assume these data we got from REST api\n  let customers = [{\n    id: \"103\",\n    name: \"Shradha\",\n    gender: \"female\"\n  }, {\n    id: \"106\",\n    name: \"Harry\",\n    gender: \"male\"\n  }, {\n    id: \"104\",\n    name: \"Mansi\",\n    gender: \"female\"\n  }, {\n    id: \"105\",\n    name: \"Siddharth\",\n    gender: \"male\"\n  }];\n  let [original, setOriginal] = [{\n    id: \"103\",\n    name: \"Shradha\",\n    gender: \"female\"\n  }, {\n    id: \"106\",\n    name: \"Harry\",\n    gender: \"male\"\n  }, {\n    id: \"104\",\n    name: \"Mansi\",\n    gender: \"female\"\n  }, {\n    id: \"105\",\n    name: \"Siddharth\",\n    gender: \"male\"\n  }];\n  let [customer, setCutomers] = useState([]);\n  useEffect(() => {\n    setCutomers(original);\n  }, []);\n  let filterCustomer = custName => {\n    console.log(\"filtering\");\n    let cust = original.filter(c => c.name.startsWith(custName));\n    setCutomers(cust);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CustomerList component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), customers.map(c => /*#__PURE__*/_jsxDEV(Customer, {\n      cust: c\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 32\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 12\n  }, this);\n}\n_s(CustomerList, \"hMcbc2vIjiKtYPHdKZsxqAPwwhM=\");\n_c = CustomerList;\nexport default CustomerList;\nvar _c;\n$RefreshReg$(_c, \"CustomerList\");","map":{"version":3,"names":["useEffect","useState","Customer","Filter","jsxDEV","_jsxDEV","CustomerList","_s","customers","id","name","gender","original","setOriginal","customer","setCutomers","filterCustomer","custName","console","log","cust","filter","c","startsWith","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["C:/Users/BANSROY/Documents/Frontend/React/customer-app/src/components/CustomerList.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Customer from \"./Customer\";\r\nimport Filter from \"./Filter\";\r\nfunction CustomerList() {\r\n    //Assume these data we got from REST api\r\n    let customers = [\r\n        { id: \"103\", name: \"Shradha\", gender: \"female\" },\r\n        { id: \"106\", name: \"Harry\", gender: \"male\" },\r\n        { id: \"104\", name: \"Mansi\", gender: \"female\" },\r\n        { id: \"105\", name: \"Siddharth\", gender: \"male\" }\r\n    ];\r\n\r\n    let [original,setOriginal] = [\r\n        { id: \"103\", name: \"Shradha\", gender: \"female\" },\r\n        { id: \"106\", name: \"Harry\", gender: \"male\" },\r\n        { id: \"104\", name: \"Mansi\", gender: \"female\" },\r\n        { id: \"105\", name: \"Siddharth\", gender: \"male\" }\r\n    ];\r\n\r\n    let [customer,setCutomers] = useState([]);\r\n    useEffect(()=>{\r\n        setCutomers(original);\r\n    },[])\r\n\r\n    let filterCustomer = (custName)=>{\r\n        console.log(\"filtering\")\r\n        let cust = original.filter(c=>c.name.startsWith(custName))\r\n        setCutomers(cust);\r\n    }\r\n\r\n    return <div>\r\n        <Filter/>\r\n        <h1>CustomerList component</h1>\r\n        {\r\n            customers.map(c => <Customer cust={c} />)\r\n        }\r\n    </div>\r\n}\r\nexport default CustomerList;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC9B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB;EACA,IAAIC,SAAS,GAAG,CACZ;IAAEC,EAAE,EAAE,KAAK;IAAEC,IAAI,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAS,CAAC,EAChD;IAAEF,EAAE,EAAE,KAAK;IAAEC,IAAI,EAAE,OAAO;IAAEC,MAAM,EAAE;EAAO,CAAC,EAC5C;IAAEF,EAAE,EAAE,KAAK;IAAEC,IAAI,EAAE,OAAO;IAAEC,MAAM,EAAE;EAAS,CAAC,EAC9C;IAAEF,EAAE,EAAE,KAAK;IAAEC,IAAI,EAAE,WAAW;IAAEC,MAAM,EAAE;EAAO,CAAC,CACnD;EAED,IAAI,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAG,CACzB;IAAEJ,EAAE,EAAE,KAAK;IAAEC,IAAI,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAS,CAAC,EAChD;IAAEF,EAAE,EAAE,KAAK;IAAEC,IAAI,EAAE,OAAO;IAAEC,MAAM,EAAE;EAAO,CAAC,EAC5C;IAAEF,EAAE,EAAE,KAAK;IAAEC,IAAI,EAAE,OAAO;IAAEC,MAAM,EAAE;EAAS,CAAC,EAC9C;IAAEF,EAAE,EAAE,KAAK;IAAEC,IAAI,EAAE,WAAW;IAAEC,MAAM,EAAE;EAAO,CAAC,CACnD;EAED,IAAI,CAACG,QAAQ,EAACC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACzCD,SAAS,CAAC,MAAI;IACVe,WAAW,CAACH,QAAQ,CAAC;EACzB,CAAC,EAAC,EAAE,CAAC;EAEL,IAAII,cAAc,GAAIC,QAAQ,IAAG;IAC7BC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxB,IAAIC,IAAI,GAAGR,QAAQ,CAACS,MAAM,CAACC,CAAC,IAAEA,CAAC,CAACZ,IAAI,CAACa,UAAU,CAACN,QAAQ,CAAC,CAAC;IAC1DF,WAAW,CAACK,IAAI,CAAC;EACrB,CAAC;EAED,oBAAOf,OAAA;IAAAmB,QAAA,gBACHnB,OAAA,CAACF,MAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTvB,OAAA;MAAAmB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE3BpB,SAAS,CAACqB,GAAG,CAACP,CAAC,iBAAIjB,OAAA,CAACH,QAAQ;MAACkB,IAAI,EAAEE;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE5C,CAAC;AACV;AAACrB,EAAA,CAlCQD,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAmCrB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}