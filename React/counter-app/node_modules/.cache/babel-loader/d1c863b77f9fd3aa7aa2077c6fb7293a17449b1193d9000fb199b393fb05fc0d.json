{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BANSROY\\\\Documents\\\\Frontend\\\\React\\\\counter-app\\\\src\\\\component\\\\Counter.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Counter() {\n  _s();\n  // let count = 0;\n\n  // useState() is a hook/inbuilt function\n  // It is used to maintain the state of the funtional component\n  // useState() returns tuple, which has 2 fields\n  // One is data, and second is setter function\n\n  let [count, setCount] = useState(1);\n  let [name, setName] = useState(\"...\");\n  let btnClick = () => {\n    // count++;\n    setCount(count + 1);\n    console.log(\"Button Clicked \" + count);\n  };\n  let nameChangedHandler = event => {\n    setName(event.target.value);\n    console.log(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: btnClick,\n      children: \"Click me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), \"Enter a name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onKeyUp: nameChangedHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(Counter, \"7VE0zA1r8HWFLHAMASJGfzHU8sY=\");\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Counter","_s","count","setCount","name","setName","btnClick","console","log","nameChangedHandler","event","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onKeyUp","_c","$RefreshReg$"],"sources":["C:/Users/BANSROY/Documents/Frontend/React/counter-app/src/component/Counter.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction Counter() {\r\n    // let count = 0;\r\n\r\n    // useState() is a hook/inbuilt function\r\n    // It is used to maintain the state of the funtional component\r\n    // useState() returns tuple, which has 2 fields\r\n    // One is data, and second is setter function\r\n\r\n    let [count, setCount] = useState(1);\r\n    let [name, setName] = useState(\"...\");\r\n\r\n    let btnClick = () => {\r\n        // count++;\r\n        setCount(count + 1);\r\n        console.log(\"Button Clicked \" + count)\r\n    }\r\n\r\n    let nameChangedHandler=(event)=>{\r\n        setName(event.target.value)\r\n        console.log(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>{count}</h1>\r\n            <button onClick={btnClick}>Click me!</button>\r\n            <br></br>\r\n            <br></br>\r\n            Enter a name: <input type=\"text\" onKeyUp={nameChangedHandler} ></input>\r\n            <h2>{name}</h2>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Counter;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf;;EAEA;EACA;EACA;EACA;;EAEA,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACnC,IAAI,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAErC,IAAIS,QAAQ,GAAGA,CAAA,KAAM;IACjB;IACAH,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACnBK,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGN,KAAK,CAAC;EAC1C,CAAC;EAED,IAAIO,kBAAkB,GAAEC,KAAK,IAAG;IAC5BL,OAAO,CAACK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAC3BL,OAAO,CAACC,GAAG,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,oBACIb,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAKX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBlB,OAAA;MAAQmB,OAAO,EAAEZ,QAAS;MAAAO,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7ClB,OAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTlB,OAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,kBACK,eAAAlB,OAAA;MAAOoB,IAAI,EAAC,MAAM;MAACC,OAAO,EAAEX;IAAmB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eACvElB,OAAA;MAAAc,QAAA,EAAKT;IAAI;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEd,CAAC;AAGd;AAAChB,EAAA,CAlCQD,OAAO;AAAAqB,EAAA,GAAPrB,OAAO;AAmChB,eAAeA,OAAO;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}